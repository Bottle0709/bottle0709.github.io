{"meta":{"title":"TLY's Blog","subtitle":null,"description":null,"author":"Tong Liping","url":"http://yoursite.com"},"pages":[{"title":"关于我　","date":"2018-01-26T04:44:39.000Z","updated":"2018-01-28T09:53:32.432Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-01-29T07:16:04.000Z","updated":"2018-01-29T07:17:32.262Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"项目","date":"2018-01-26T04:44:39.000Z","updated":"2018-01-29T07:17:54.852Z","comments":true,"path":"project/index.html","permalink":"http://yoursite.com/project/index.html","excerpt":"","text":""},{"title":"留言　","date":"2018-01-28T08:18:16.000Z","updated":"2018-01-28T08:22:37.787Z","comments":true,"path":"saying/index.html","permalink":"http://yoursite.com/saying/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo 博客个性化搭建","slug":"Hexo 博客个性化搭建","date":"2018-01-08T03:47:40.000Z","updated":"2018-02-24T05:30:22.722Z","comments":true,"path":"20180108/Hexo 博客个性化搭建/","link":"","permalink":"http://yoursite.com/20180108/Hexo 博客个性化搭建/","excerpt":"","text":"前言&emsp;博客基本框架搭建起来了，但不是很满意。于是下一步要做的就是添加想要实现的功能。在此过程中通过查网上资料且不断的折腾代码，完成如今的博客，还是有些缺陷，日后再修改，在此记录下我是如何实现这些功能的，以免过后遗忘。 一、框架功能添加&emsp;1.增加新的导航菜单&emsp;在 Hexo里，默认的导航菜单只有Home和Archives两项，那么如何增加新的导航菜单进去？ &emsp;首先，打开主题的配置文件_config.yml&emsp;之后我们会看到menu:，这个部分是设置菜单的，在下面加一想设置About: /about，前面部分是名称，后面部分是访问路径。1234menu: Home: / Archives:/archives About: /about &emsp;设置好后，通过运行命令，建立 about，会在 source 目录里生成一个对应的about目录，该目录下的 index.md，就是访问 About 时的页面。1hexo n page &apos;about&apos; &emsp;2.修改头像并旋转&emsp;实现方法：打开\\themes\\miho\\source\\css\\_partial\\header.styl，在里面添加如下代码：1234567891011121314#logo @extend $logo-common margin: 20px auto img border-radius: 50% transition: all 1.6s cubic-bezier(.17,.67,.62,1.22) -webkit-transition: all 1.6s cubic-bezier(.17,.67,.62,1.22) -moz-transition: all 1.6s cubic-bezier(.17,.67,.62,1.22) -o-transition: all 1.6s cubic-bezier(.17,.67,.62,1.22) -ms-transition: all 1.6s cubic-bezier(.17,.67,.62,1.22) &amp;:hover transform: rotate(360deg); -ms-transform: rotate(360deg); /* IE 9 */ -webkit-transform: rotate(360deg); /* Safari and Chrome */ &emsp;实现效果： &emsp;3.设置网站的图标Favicon&emsp;实现方法：&emsp;在网站下载或是制作，并将图标名称改为favicon.ico,然后把图标放在/themes/miho/source/images里，并修改主题配置文件：12# Favicon of your site | 网站iconfavicon: /favicon.icon &emsp;实现效果： &emsp;4.在网站底部加上访问量&emsp;实现方法：&emsp;打开\\themes\\miho\\layout\\_partial\\plugins\\sites\\visit.ejs文件，添加如下代码：123&lt;span id=\"busuanzi_container_site_pv\" style='display:none'&gt; &lt;%- theme.access_counter.site_pv %&gt;&lt;span id=\"busuanzi_value_site_pv\"&gt;&lt;/span&gt; &lt;/span&gt; &emsp;实现效果： &emsp;5.增加图床&emsp;实现方法：&emsp;写博客避免不了常常使用图片,可是Github Pages是有容量限制的,不可能全部都作为静态文件进行上传。在此使用一个大多博主推荐的“七牛云图床”。七牛云不是免费的，但每个用户有10GB免费存储，每月10GB免费下载流量,需要验证身份证等个人信息。使用方法:&emsp;1.打开链接并注册,单机 对象存储–&gt;创建空间。 &emsp;2.下载 MPic，下载后设置账号 1).在“个人面板”-&gt;“密钥管理”中查看 AccessKey/SecretKey； 2).在储存空间的“空间概览”里，记住这里的“测试域名”； 3).在MPic上配置上刚才七牛储存的“空间名称”、“AccessKey”、“SecretKey”、“域名”后，保存。然后就可以上传到自己专属的七牛空间上了。 二、文章功能添加&emsp;1.主页文章添加阴影效果&emsp;实现方法：打开\\themes\\miho\\source\\css\\_partial\\header.styl,向里面加入：12345678// 主页文章添加阴影效果 .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; &emsp;2.修改``代码块自定义样式&emsp;实现方法：12345678910111213.article-entry code &#123; color: #c7254e; line-height: 1; margin: 0 4px; font-size: 85%; font-family: \"Source Code Pro\", Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; padding: 2px 4px; border: 1px solid #eee; border-radius: 2px; word-wrap: break-word; background-color: #f9f2f4;&#125; &emsp;实现效果： &emsp;3.在每篇文章末尾统一添加”本文结束”标记&emsp;实现方法：&emsp;在路径 \\themes\\miho\\layout\\_partial\\post 中新建 passage-end-tag.ejs 文件,并添加以下内容：1&lt;div style=\"text-align:center;color: #B8B8B8;font-size:22px;\"&gt;-------------本文结束 &lt;i class=\"fa fa-paw\"&gt;&lt;/i&gt; 感谢您的阅读-------------&lt;/div&gt; &emsp;实现效果： &emsp;4.添加来必力评论&emsp;实现方法：12345678910111213141516171819202122232425262728&lt;% if (!index &amp;&amp; post.comments)&#123; %&gt; &lt;% if (theme.changyan_appid &amp;&amp; theme.changyan_appkey)&#123; %&gt; &lt;%- partial('plugins/comments/changyan', &#123; key: post.slug, title: post.title, url: config.url+url_for(post.path) &#125;) %&gt; &lt;% &#125; else if (theme.youyan_id) &#123; %&gt; &lt;%- partial('plugins/comments/youyan') %&gt; &lt;% &#125; else if (theme.livere_uid) &#123; %&gt; &lt;%- partial('plugins/comments/livere') %&gt; &lt;div id=\"lv-container\" data-id=\"city\" data-uid=\"&lt;%= theme.livere_uid %&gt;\"&gt;&lt;/div&gt; &lt;% &#125;else if (theme.disqus || config.disqus_shortname) &#123; %&gt; &lt;section id=\"comments\"&gt; &lt;div id=\"disqus_thread\"&gt; &lt;script type=\"text/javascript\"&gt; var disqus_shortname = '&lt;%= theme.disqus || config.disqus_shortname %&gt;'; (function() &#123; var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); &#125;)(); &lt;/script&gt; &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=\"//disqus.com/?ref_noscript\"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt; &lt;/div&gt; &lt;/section&gt; &lt;% &#125; %&gt;&lt;% &#125; %&gt; &emsp;实现效果： &emsp;5.博文置顶&emsp;实现方法：&emsp;修改 hero-generator-index 插件，把文件：node_modules/hexo-generator-index/lib/generator.js 内的代码替换为：12345678910111213141516171819202122232425262728'use strict';var pagination = require('hexo-pagination');module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; &emsp;在文章中添加 top 值，数值越大文章越靠前，如12345678---title: 解决Charles乱码问题date: 2017-05-22 22:45:48tags: 技巧categories: 技巧copyright: truetop: 100--- 三、页面功能添加&emsp;1.项目页面&emsp;实现方法：12345678910111213141516171819202122232425262728293031323334&lt;div class=\"container\"&gt; &lt;h2 class=\"ctitle\"&gt;&lt;b&gt;个人作品集&lt;/b&gt;&lt;/h2&gt; &lt;div class=\"gbook\"&gt; &lt;div class=\"about\"&gt; &lt;div class=\"about_girl\"&gt;&lt;span&gt;&lt;a href=\"/\"&gt;&lt;img src=\"&lt;%= url_for(theme.pro) %&gt;\" alt=\"logo\"&gt;&lt;/a&gt;&lt;/span&gt; &lt;p&gt;凡是重要的事，都得花上很多的时间，而且是完整的大块时间。不论是讨论一种新产品还是重大的人事决策，几乎所有的事情都是如此。&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"works-item\"&gt; &lt;ol class=\"repo-list\"&gt; &lt;% for(var i in theme.project)&#123; %&gt; &lt;li class=\"repo\"&gt; &lt;div class=\"works-item\"&gt; &lt;div class=\"title\"&gt; &lt;h3&gt; &lt;%- theme.project[i].title %&gt;&lt;/h3&gt; &lt;span class=\"title-date\"&gt; &lt;%- theme.project[i].data %&gt; &lt;/span&gt; &lt;/div&gt; &lt;div class=\"works-item-img\"&gt; &lt;img src=\"&lt;%- theme.project[i].img_link %&gt;\"&gt; &lt;/div&gt; &lt;span class=\"use\"&gt; &lt;%- theme.project[i].arrayVal %&gt; &lt;/span&gt; &lt;p class=\"subtitle\"&gt; &lt;%- theme.project[i].subTitle %&gt; &lt;/p&gt; &lt;p class=\"text-muted\"&gt; &lt;%- theme.project[i].direction %&gt; &lt;/p&gt; &lt;div class=\"footer clearfix\"&gt; &lt;a class=\" btn btn-default\" href=\"&lt;%- theme.project[i].link %&gt;\" target=\"_blank\"&gt; Open it&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;% &#125; %&gt; &lt;/ol&gt; &lt;/div&gt; &lt;/div&gt; &emsp;实现效果： &emsp;2.留言页面&emsp;实现方法：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&lt;div class=\"container\"&gt; &lt;h2 class=\"ctitle\"&gt; &lt;b&gt;留言板&lt;/b&gt; &lt;span&gt;你，生命中最重要的过客，之所以是过客，因为你未曾为我停留。&lt;/span&gt; &lt;/h2&gt; &lt;div class=\"gbook\"&gt; &lt;div class=\"about\"&gt; &lt;div id=\"fountainG\"&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;/div&gt; &lt;div class=\"about_girl\"&gt;&lt;span&gt;&lt;a href=\"/\"&gt;&lt;img src=\"&lt;%= url_for(theme.logo) %&gt;\" alt=\"logo\"&gt;&lt;/a&gt;&lt;/span&gt; &lt;p&gt;当您驻足停留过，从此便注定我们的缘分。站在时间的尽头，我们已是朋友，前端的路上我再也不用一个人独自行走。&lt;/p&gt; &lt;/div&gt; &lt;div class=\"gbko\"&gt; &lt;% if (theme.changyan_appid &amp;&amp; theme.changyan_appkey)&#123; %&gt; &lt;%- partial('/plugins/comments/changyan', &#123; key: post.slug, title: post.title, url: config.url+url_for(post.path) &#125;) %&gt; &lt;% &#125; else if (theme.youyan_id) &#123; %&gt; &lt;%- partial('plugins/comments/youyan') %&gt; &lt;% &#125; else if (theme.livere_uid) &#123; %&gt; &lt;%- partial('plugins/comments/livere') %&gt; &lt;div id=\"lv-container\" data-id=\"city\" data-uid=\"&lt;%= theme.livere_uid %&gt;\"&gt;&lt;/div&gt; &lt;% &#125;else if (theme.disqus || config.disqus_shortname) &#123; %&gt; &lt;section id=\"comments\"&gt; &lt;div id=\"disqus_thread\"&gt; &lt;script type=\"text/javascript\"&gt; var disqus_shortname = '&lt;%= theme.disqus || config.disqus_shortname %&gt;'; (function() &#123; var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); &#125;)(); &lt;/script&gt; &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=\"//disqus.com/?ref_noscript\"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt; &lt;/div&gt; &lt;/section&gt; &lt;% &#125; %&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; &emsp;实现效果： &emsp;3.关于页面&emsp;实现方法：123456789101112131415161718192021222324252627282930&lt;div id=\"cont\"&gt; &lt;marquee style=\"height: 140px;\" scrollamount=\"2\" direction=\"down\" behavior=\"slide\"&gt; &lt;div class=\"banner\"&gt; &lt;p&gt;我们不停的翻弄着回忆，却再也找不回那时的自己&lt;/p&gt; &lt;p&gt;人生，是一场盛大的遇见。若你懂得，就请珍惜。&lt;/p&gt; &lt;p&gt;无论下多久的雨，最后都会有彩虹；无论你多么悲伤，要相信幸福在前方等候.&lt;/p&gt; &lt;/div&gt; &lt;/marquee&gt; &lt;div class=\"about left\"&gt; &lt;h2&gt;Just about me&lt;/h2&gt; &lt;ul&gt; &lt;p&gt;关于我，一个未来的小小码农，茫茫宇宙中的一粒小石子。&lt;/p&gt; &lt;p&gt;凭借着兴趣已经走过了三个年头，现在已经是大四的老油条，但总的来说还是一个刚步入社会的新人。&lt;/p&gt; &lt;p&gt;很喜欢交朋友， 下面是我的微信二维码， 欢迎看到博客的朋友加我好友， 多给我提提意见， 多讨论讨论技术，三人行， 则必有我师 !&lt;/p&gt; &lt;p align=\"center\"&gt;微信请备注：博客&lt;/p&gt; &lt;p&gt;&lt;img src=\"/images/wechat_code.jpg\" alt=\"\"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;/ul&gt; &lt;h2&gt;About my blog&lt;/h2&gt; &lt;p&gt;域 名：暂无&lt;/p&gt; &lt;p&gt;服务器：托管于 Github，欢迎 Fork &lt;/p&gt; &lt;p&gt;折腾开始于2018年1月2日，基本在2018年1月16完工。&lt;/p&gt; &lt;p&gt;一直想有个自己的博客，写写个人学习、工作感悟什么的，当然也会有一些IT类的文章,这次就借助hexo+Github page 搭建了这个博客，第一次搭建还是有些粗糙，以后会逐渐改进。。。&lt;/p&gt; &lt;h2&gt;Contact Me&lt;/h2&gt; &lt;p&gt;新浪微博：&lt;a href=\"http://weibo.com/tongliping0709\" class=\"blog_link\"&gt;点击进入我的新浪微博（可以加个关注哈）&lt;/a&gt;&lt;/p&gt; &lt;p&gt;知乎：&lt;a href=\"https://www.zhihu.com/people/tian-hao-69-26\" class=\"blog_link\"&gt;点击进入我的知乎&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Github: &lt;a href=\"https://github.com/tongliping0709\" class=\"blog_link\"&gt;点击进入我的github ( 欢迎fork me )&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;/div&gt; &emsp;实现效果：","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"}],"tags":[{"name":"css","slug":"css","permalink":"http://yoursite.com/tags/css/"},{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"}],"keywords":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"}]},{"title":"VScode 前端插件使用","slug":"VScode 前端插件使用","date":"2018-01-07T03:47:40.000Z","updated":"2018-02-06T11:04:00.209Z","comments":true,"path":"20180107/VScode 前端插件使用/","link":"","permalink":"http://yoursite.com/20180107/VScode 前端插件使用/","excerpt":"","text":"前言&emsp;在搭建博客时，接触到了这款软件，发现其是一个很实用的前端软件，使用起来很方便，安装一系列插件即可。在此，记录自己安装过的一些插件，并记录其功能。 &emsp;1.Auto Close Tag 自动添加 HTML/XML关闭标签 &emsp;2.Document This js 的注释模板 （注意：新版的vscode已经原生支持,在function上输入/** tab） &emsp;3.fileheader 顶部注释模板，可定义作者、时间等信息，并会自动更新最后修改时间 &emsp;4.filesize 在底部状态栏显示当前文件大小，点击后还可以看到详细创建、修改时间 &emsp;5.Bracket Pair Colorizer 让括号拥有独立的颜色，易于区分。可以配合任意主题使用。 &emsp;6.HTML CSS Support 让 html 标签上写class 智能提示当前项目所支持的样式，新版已经支持scss文件检索 &emsp;7.HTMLHint html代码检测 &emsp;8.htmltagwrap 可以在选中HTML标签中外面套一层标签，使用：选择一大段代码，然后按“Alt + W” &emsp;9.vscode-icons 让文件类型一目了然 &emsp;10.Project Manager 高效地管理项目工程项目过多时，shift+cmd+p(shift+ctrl+p) 然后输入project，第一次选择edit Project编辑自己的工程项目，之后就可以直接选择open打开你的项目项目的保存–Project Manager:Save Project 项目的加载–Project Manager:Edit Project 几种切换项目的方法–资源管理器–编辑器–PROJECTS文件","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"软件","slug":"软件","permalink":"http://yoursite.com/tags/软件/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"利用 Github pages 搭建博客Hexo主题博客","slug":"利用 Github pages 搭建博客Hexo主题博客","date":"2018-01-06T03:47:40.000Z","updated":"2018-02-06T10:54:29.448Z","comments":true,"path":"20180106/利用 Github pages 搭建博客Hexo主题博客/","link":"","permalink":"http://yoursite.com/20180106/利用 Github pages 搭建博客Hexo主题博客/","excerpt":"","text":"1.前言&emsp;一直想搭建一个自己的个人博客，看了很多种搭建的方法，最后选择了github pages服务搭建，主要看中以下好处： 全是静态文件，访问速度快； 数据绝对安全，基于github的版本管理； 免费方便，不用花一分钱就可以搭建（毕竟还是一名学生党，目前还没有资金购买服务器）。 &emsp;而使用github pages搭建博客有两种方式，hexo和jekyll，当时我先采用的是jekyll方式搭建，但由于配置环境时一直出现错误，查了很多资料无法解决，就转战到hexo方式搭建。在此过程中，折腾博客的各种配置以及功能占具了我一部分时间，现通过文章记录过程，以免过后遗忘，且当备份之用。 2.准备工作&emsp;在开始之前，你必须已经 有一个github账号，没有的话先去注册一个； 安装node.js、npm，并了解相关基础知识； 安装git for windows(或者其他git客户端) 。 &emsp;上面几点操作的具体步骤，找度娘即可，我就不一一称述了。 3.搭建github博客&emsp;3.1.创建仓库 &emsp;进入github官网登录你的账号，新建一个名为你的用户名.github.io的仓库。&emsp;例如：，你的github用户名是zhangsan，那么你新建zhangsan.github.io的仓库（必须是你的用户名，其他名称无效），将来你的网站访问地址就是http://zhangsan.github.io，这样是不是很方便？ &emsp;需要注意的几个地方： 注册的邮箱一定要验证，否则不会成功； 仓库名字必须是：username.github.io,其中username是你的用户名； Initialize this repository with a READEM选项一定要勾选。 &emsp;3.2.配置SSH Key &emsp;为什么要配置这个呢？因为你提交代码肯定要拥有的github权限才可以，但直接使用用户名和密码不太安全，所以我们用SSH Key来解决本地和服务器的连接问题。 &emsp;1.打开 Git Bash ,设置 Git 的user name 和 email(如果是第一次的话)，这里的用户名和邮箱替换成你自己的。 &emsp;2.输入cd ~/.ssh,检查是否有.ssh的文件。 &emsp;3.输入ls,列出该文件下的内容，说明存在.ssh文件。 &emsp;4.如果不显示，则输入ssh-keygen -t rsa -C “你的邮箱”，连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\\Users\\Administrator.ssh）。 &emsp;5.打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key ,将刚复制的内容粘贴到key那里，title写项目的名字，保存。 &emsp;6.输入ssh -T git@github.com（注意邮箱地址不用改），测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了。 &emsp;3.3.使用Hexo写博客 &emsp;由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。 &emsp;3.3.1 安装 Hexo&emsp;1.在自己认为合适的地方创个文件夹，我是在D盘建了一个blog文件夹，然后通过命令行进入到该文件夹里面。 &emsp;2.输入npm install hexo -g，开始安装Hexo。 &emsp;3.输入hexo -v，检查hexo是否安装成功。 &emsp;3.3.2 初始化&emsp;1.输入hexo init，初始化该文件夹（时间会有点久，耐心等待…）看到后面的 “Start blogging with Hexo！”，初始化完成。 hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图： &emsp;2.输入npm install，安装所需要的组件。 &emsp;3.输入hexo g，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的： &emsp;4.输入hexo s，此命令是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容。 &emsp;第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑，打开时就是这个样子： &emsp;3.3.3 修改主题&emsp;个人觉得默认主题有些丑，所以我换了一个好看的主题，并加工，修改成自己想要的样子。 &emsp;1.找到自己喜欢的主题，通过 Git checkout 代码下载。 12cd /f/github/hexo/https://github.com/WongMinHo/hexo-theme-miho.git &emsp;2.下载好主题后，修改_config.yml中的theme: landscape改为theme: miho，然后根据主题配置文件进行配置，再重新执行hexo g来重新生成。 &emsp;如果出现一些莫名其妙的问题，可以先执行hexo clean来清理一下public的内容，然后再来重新生成和发布。 &emsp;3.接下来就是根据你自己的爱好，修改所选的主题。 &emsp;3.3.4 备份&emsp;Hexo在发布之后在github的仓库中我们只能找到生成的静态文件，而我们的博客的源文件：主题，文章之类的，都还在本地，并没有备份。这样很危险，万一那天电脑坏了或者是出现一些其他问题，就得从头再来。所以我们可以利用github的分支思想来备份我们的源文件。&emsp;1.添加过滤内容&emsp;备份的时候我们把master分支放生成的静态文件，Hexo-Blog（此处文件夹必须和存储分支名字一致）放我们要备份的源文件。 &emsp;在项目的根目录下新建Hexo-Blog文件夹，将项目中的文件复制粘贴到刚刚新建的文件夹中，.deploy_git、public文件夹和我们的master分支内容重复，而_config.yml为我们的站点配置文件，安全起见，这个几个文件都不备份。所以，我们在根目录下面建一个.gitignore文件来建立“黑名单”。 &emsp;.gitignore文件内容：123/.deploy_git/public /_config.yml &emsp;2.备份&emsp;鼠标右击 Hexo-Blog 文件夹，打开 Git Bash ,依次输入12345$ git init$ git remote add origin git@github.com:username/username.github.io.git $ git add .$ git commit -m \"blog\"$ git push origin master:Hexo-Blog &emsp;这时，你会发现你的github博客仓库已经有了一个新分支 Hexo-Blog ,备份工作完成。 &emsp;3.后续&emsp;以后，每次在本地写好博文后，可以先执行下列命令进行备份，然后再更新静态文件。123$ git add .$ git commit -m \"blog\"$ git push origin master:Hexo-Blog &emsp;3.3.5 发布&emsp;1.清空hexo静态文件和缓存，并重新生成1hexo clean &amp;&amp; hexo g &emsp;2.本地预览，确没有问题再进行发布1hexo s &emsp;3.进行发布1hexo d &emsp;3.3.5 效果&emsp;可以访问我的git博客来查看效果：https://tongliping0709.github.io/","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"}],"tags":[{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"},{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}],"keywords":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"}]}]}